# Docker Commands
# Start Docker Service
sudo systemctl start docker


# Build Docker Image
sudo docker build --network=host -t caixinha .

# Run Docker Container (Basic)
docker run -it --rm caixinha

# Run Docker Container with GUI Support
docker run -it --rm --runtime=runc \
    --env=DISPLAY=$DISPLAY \
    --env=QT_X11_NO_MITSHM=1 \
    --volume=/tmp/.X11-unix:/tmp/.X11-unix:rw \
    caixinha

# Run Docker Container with SSH Access
docker run -it --runtime=runc \
    --env=DISPLAY=$DISPLAY \
    --env=QT_X11_NO_MITSHM=1 \
    --volume=/tmp/.X11-unix:/tmp/.X11-unix:rw \
    --volume=$HOME/.ssh:/home/ros/.ssh \
    --privileged \
    --name=caixinha_container \
    caixinha

# Start a Detached Docker Container
docker run -dit --name caixinha_container \
    --env=DISPLAY=$DISPLAY \
    --env=QT_X11_NO_MITSHM=1 \
    --volume=/tmp/.X11-unix:/tmp/.X11-unix:rw \
    --name=caixinha_container \
    caixinha

# Attach to Running Container
docker exec -it caixinha_container /bin/bash

# Stop and Remove the Running Container
docker stop caixinha_container && docker rm caixinha_container

# Extract QGroundControl AppImage
./QGroundControl.AppImage --appimage-extract
./squashfs-root/QGroundControl

# Start ArduPilot SITL Simulation
sim_vehicle.py -v ArduCopter --console --map -w

# Alternative: Run SITL from ArduCopter Directory
cd ~/ardupilot/ArduCopter
sim_vehicle.py --console --map -w

# Alternative: Run SITL from Base ArduPilot Directory
cd ~/ardupilot/ArduCopter
../Tools/autotest/sim_vehicle.py --map --console

# Run ROS 2 ArduPilot Tests
cd ~/ardu_ws/
colcon test --packages-select ardupilot_dds_tests

# Build ROS 2 Packages
colcon build --packages-up-to ardupilot_sitl
colcon build --packages-up-to ardupilot_gz_bringup

# Source ROS 2 Installation
source install/setup.bash

docker login

docker tag caixinha:latest samuelteixeira1/caixinha:latest
docker push samuelteixeira1/caixinha:latest



